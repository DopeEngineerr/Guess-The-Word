{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","randWords","useState","setInputList","newWords","sWords","KuchBhi","arr","i","length","temp","j","Math","floor","random","ScrambleWords","ranNum","CreateNewWords","split","join","className","id","placeholder","type","autoComplete","onChange","event","target","value","toString","onClick","toLowerCase","document","getElementById","innerHTML","setTimeout","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f9d10047.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n\n  const [InputList, setInputList] = useState();\n\n\n  let newWords = \"\";\n  let randWords = \"\";\n\n\n  // LEVEL: HARD\n\n  // let sWords = [\"acrid\", \"aged\", \"airless\", \"airport\", \"alkaline\", \"aromatic\", \"bacon\", \"baking\", \"banana\", \"barbeque\", \"barnyard\", \"beachy\", \"beery\", \"bitter\", \"bright\", \"bloody\", \"books\", \"bouquet\", \"briney\", \"burnt\", \"camphoric\", \"catbox\", \"cedar\", \"cigar\", \"cinnamon\", \"citrusy\", \"cheesy\", \"chicken\", \"chlorine\", \"clean\", \"clove\", \"cloying\", \"coffee\", \"creamy\", \"curry\", \"damp\", \"doggy\", \"earthy\", \"eye\", \"exhaust\", \"fermented\", \"fishy\", \"floury\", \"floral\", \"foul\", \"fumes\", \"funky\", \"fragrant\", \"fresh\", \"fruity\", \"garlicky\", \"garbage\", \"gasoline\", \"ginger\", \"grassy\", \"green\", \"hairspray\", \"herbal\", \"homey\", \"home\", \"horse\", \"jasmine\", \"ink\", \"incense\", \"leafy\", \"lemony\", \"lavender\", \"laundry\", \"lawn\", \"leathery\", \"locker\", \"meaty\", \"medicinal\", \"metallic\", \"mildewed\", \"minty\", \"moldy\", \"mothball\", \"musky\", \"mushroomy\", \"new car\", \"newspaper\", \"notes\", \"odor\", \"oily\", \"oniony\", \"orangey\", \"paint\", \"peppery\", \"perfumey\", \"piney\", \"pinion\", \"pickled\", \"plasticky\", \"popcorn\", \"zoo\"];\n\n\n  //LEVEL: EASY\n\n  let sWords = [\"time\", \"year\", \"people\", \"way\", \"day\", \"man\", \"thing\", \"woman\", \"life\", \"child\", \"world\", \"school\", \"state\", \"family\", \"student\", \"group\", \"country\", \"problem\", \"hand\", \"part\", \"place\", \"case\", \"week\", \"company\", \"system\", \"program\", \"question\", \"work\", \"government\", \"number\", \"night\", \"point\", \"home\", \"water\", \"room\", \"mother\", \"area\", \"money\", \"story\", \"fact\", \"month\", \"lot\", \"right\", \"study\", \"book\", \"eye\", \"job\", \"word\", \"business\", \"issue\", \"side\", \"kind\", \"head\", \"house\", \"service\", \"friend\", \"father\", \"power\", \"hour\", \"game\", \"line\", \"end\", \"member\", \"law\", \"car\", \"city\", \"community\", \"president\", \"team\", \"minute\", \"idea\", \"kid\", \"body\", \"information\", \"back\", \"parent\", \"face\", \"others\", \"level\", \"office\", \"door\", \"health\", \"person\", \"art\", \"war\", \"history\", \"party\", \"result\", \"change\", \"morning\", \"reason\", \"research\", \"girl\", \"guy\", \"moment\", \"air\", \"teacher\", \"force\"];\n\n  var KuchBhi = \"\";\n\n  const CreateNewWords = () => {\n    let ranNum = Math.floor(Math.random() * sWords.length);\n    let newTempSwords = sWords[ranNum];\n    //console.log(newTempSwords.split(\"\"));\n    return newTempSwords;\n  };\n\n  const ScrambleWords = (arr) => {\n    for (let i = arr.length - 1; i > 0; i--) {\n      let temp = arr[i];\n      let j = Math.floor(Math.random() * (i + 1));\n      arr[i] = arr[j];\n      arr[j] = temp;\n    }\n    return arr;\n  };\n\n  newWords = CreateNewWords();\n  randWords = ScrambleWords(newWords.split(\"\")).join(\"\");\n  //console.log(randWords.join(\"\"));\n\n  // useEffect(() => {\n\n  // }, []);\n\n  const ItemEvent = (event) => {\n    //event.preventDefault();\n    //setInputList(event.target.value);\n    KuchBhi = event.target.value.toString();\n  };\n\n  // console.log(InputList);\n\n\n\n  const ListOfItems = (event) => {\n\n    // event.preventDefault();\n    if (KuchBhi.toLowerCase() === newWords.toLowerCase()) {\n      //alert(\"Correct\");\n      //console.log(\"correct\");\n      document.getElementById(\"result\").innerHTML = \"\";\n\n      document.getElementById(\"correct\").innerHTML = \"Bravo! It's Correct!\";\n      // window.location.reload();\n      setTimeout(function () {\n        window.location.reload(1);\n      }, 1500);\n    }\n    else {\n      //alert(\"Incorrect\");\n      //console.log(\"Incorrect\");\n      document.getElementById(\"result\").innerHTML = \"\";\n      document.getElementById(\"incorrect\").innerHTML = \"Sorry, It's Incorrect!\";\n      // window.location.reload();\n      setTimeout(function () {\n        window.location.reload(1);\n      }, 1500);\n    };\n\n    setInputList(\"\");\n  };\n\n  const Refresh = () => {\n    window.location.reload();\n  };\n\n\n  return (\n    <div className=\"project \">\n      <div className=\"title center-align black\">\n        <h1 className=\"heading white-text \">GUESS THE WORD</h1>\n        <h6 className=\"credit grey-text\">Made with ‚ù§ by Kushagra</h6>\n      </div>\n      <div className=\"row\">\n        <div className=\"col s12 m6 l6 offset-l3\">\n          <div className=\"box grey darken-4 z-depth-5\">\n            <div className=\"myWord\">\n              <h4 className=\"word center-align white-text\" id=\"result\">Your word: <span className=\"blue-text text-darken-3\">{randWords}</span> </h4>\n              <h4 id=\"correct\" className=\"center-align green-text\"></h4>\n              <h4 id=\"incorrect\" className=\"center-align red-text\"></h4>\n            </div>\n            <div className=\"myInput input-field\" >\n              <input\n                className=\"white-text grey darken-3 center-align\"\n                placeholder=\"Enter the correct word here...\"\n                type=\"text\"\n                autoComplete=\"off\"\n                onChange={ItemEvent}\n              // value={InputList} \n              //value={KuchBhi} \n              />\n              <br />\n              <br />\n            </div>\n            <div className=\"myButton center-align\">\n              <button className=\"btn grey lighten-4 black-text waves-effect waves-ripple\" type=\"submit\" onClick={ListOfItems}>GUESS</button>\n              <button id=\"bottomBtn\" className=\"btn grey lighten-4 black-text waves-effect waves-ripple\" onClick={Refresh}>Next</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}